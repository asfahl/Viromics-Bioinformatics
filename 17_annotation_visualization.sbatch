#!/bin/bash
#SBATCH --tasks=1
#SBATCH --cpus-per-task=1
#SBATCH --partition=short
#SBATCH --mem=2G
#SBATCH --time=00:01:00
#SBATCH --job-name=plot
#SBATCH --output=1.4_annotation/20_plot_viral_genome/viral_genome.slurm.%j.out
#SBATCH --error=1.4_annotation/20_plot_viral_genome/viral_genome.slurm.%j.err

# activate the python virtual environment with the packages we need for plotting
source py3env/bin/activate

mkdir -p 1.4_annotation/20_plot_viral_genome/

# define an array with contig ids to plot
declare -a arr=("contig_871" "contig_871")

features='/home/qe76qox/Viromics-Bioinformatics/1.3_virus_identification/20_results_assessment_checkv/cross_assembly/tmp/gene_features.tsv'
outdir='/home/qe76qox/Viromics-Bioinformatics/1.4_annotation/20_plot_viral_genome'
pharokka_dir='/home/qe76qox/Viromics-Bioinformatics/1.4_annotation/10_pharokka/11_selected_contig'

# loop through the array
for contig in "${arr[@]}"
do
      echo $contig
      echo "$contig"
      # run the python script wich extracts the prodigal-gv-based annotations from the CheckV output
      # in this solution, the script expects three parameters:
      # first: the filname of the table generated by CheckV
      # second: the output filename for the filtered gff file
      # third: the contig id to filter for
      python python_scripts/visualization/Annotation_visualization/tsv_to_gff.py $features $outdir/$contig.gff $contig
      
      # run the python script wich plots the two annotations in a circle
      # in this solution, the script expects four parameters:
      # first: the gff file of the prodigal-gv-based annotation
      # second: the gff file created by phanotate 
      # third: the output file name
      # fourth: the contig id to write into the plot

      python python_scripts/visualization/Annotation_visualization/virome_annotation_plot.py $outdir/$contig.gff $pharokka_dir/$contig.gff $outdir/"$contig"_circos.png $contig
done

deactivate